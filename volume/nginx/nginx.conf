worker_processes 1;

events { worker_connections 1024; }
http {
    server {
        listen 80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    server {
        listen [::]:443 ssl;
        listen 443 ssl default;
        server_name __;

        ssl_certificate /etc/nginx/certs/apache-selfsigned.crt;
        ssl_certificate_key /etc/nginx/keys/apache-selfsigned.key;

        proxy_set_header X-Forwarded-For $proxy_protocol_addr; # To forward the original client's IP address
        proxy_set_header X-Forwarded-Proto $scheme; # to forward the  original protocol (HTTP or HTTPS)
        proxy_set_header Host $host; # to forward the original host requested by the client

       absolute_redirect off;

        location / {
            #Redirecting to the Front end on host machine 
                 #On linux 
            #proxy_pass         https://172.17.0.1:3000;
                 #On Mac 
            #proxy_pass         https://host.docker.internal:3000;
                #In docker
            proxy_pass https://frontend.openelis.org:3000;
            proxy_redirect     off;
        }

        location /api/ {
            #Redirecting to OpenELIS server on host machine 
                 #On linux 
            #proxy_pass         https://172.17.0.1:8443/api/;
                 #On Mac 
            #proxy_pass         https://host.docker.internal:8443/api/;
                #In docker
            proxy_pass         https://oe.openelis.org:8443/api/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}
